#!/usr/bin/env python

import sys
import time
import logging
from systemd import journal
from i3ipc import Connection, Event


log = logging.getLogger(__name__)
log.setLevel(logging.DEBUG)
log.addHandler(logging.StreamHandler(sys.stdout))
log.addHandler(journal.JournalHandler(SYSLOG_IDENTIFIER="swayautolayout"))


def on_window_focus(con, _e):
    focused = con.get_tree().find_focused()

    if focused.layout in ["stacked", "tabbed"]:
        return

    if focused.rect.width > focused.rect.height:
        con.command("split h")
    else:
        con.command("split v")


def loop():
    while True:
        time.sleep(1)

        con = Connection()
        if not con:
            log.error("unable to connect to sway socket")
            continue

        log.info("connected to socket")

        log.info("registering window focus hook")
        con.on(Event.WINDOW_FOCUS, on_window_focus)

        try:
            con.main()  # this is a blocking call
        except Exception as err:
            log.error(f"ERROR: {err}")

        log.warning("lost socket connection, retrying...")


def main():
    try:
        loop()
    except KeyboardInterrupt:
        log.info("interrupted by user")
    log.info("exiting")


if __name__ == "__main__":
    main()
