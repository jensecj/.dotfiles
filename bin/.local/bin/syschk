#!/bin/sh

good() {
    printf "\033[32;1m[+]\033[0m %s\n" "$*"
}

bad() {
    printf "\033[31;1m[-]\033[0m %s\n" "$*"
}

chk() {
    test $? -eq 0 && good "$*" || bad "$*"
}

systemd_is_active() {
    unit=$1
    shift
    args=$@
    systemctl is-active "$unit" $args > /dev/null 2>&1; chk "$unit"
}

systemd_is_enabled() {
    unit=$1
    shift
    args=$@
    systemctl is-enabled "$unit" $args > /dev/null 2>&1; chk "$unit"
}

proc_chk() {
    pgrep "$1" > /dev/null 2>&1; chk "$1"
}

mount_chk() {
    DIR_A=$1
    DIR_B=$2
    MSG=$3

    if cat "/proc/mounts" | grep -q "$DIR_A $DIR_B"; then
        good "$MSG"
    else
        bad "$MSG"
    fi
}

file_age_chk() {
    file=$1
    limit=$2

    last_mod=$(stat -c "%Y" "$file")
    now_epoch=$(date +%s)
    epoch_diff=$(echo "$now_epoch - $last_mod" | bc)
    if [ $epoch_diff -gt $limit ]; then
        age=$(stat -c "%y" $file)
        bad "$file last modified $age"
    else
        good "$file is up to date"
    fi
}

systemd_is_active "dhcpcd"
systemd_is_active "dnscrypt-proxy"
systemd_is_active "tailscaled"
systemd_is_active "ufw" # FIXME: does not work when ufw is inactive
systemd_is_active "earlyoom"
systemd_is_active "clamav-daemon"
systemd_is_active "clamav-freshclam"
systemd_is_enabled "clamav-unofficial-sigs"
systemd_is_active "auditd"
systemd_is_active "usbguard"
systemd_is_active "apparmor"

printf "\n"

proc_chk "sway"
proc_chk "swayidle"
proc_chk "persway"
proc_chk "waybar"
proc_chk "wob"
proc_chk "psi-notify"
# proc_chk "tincd"
# proc_chk "dunst" # is activated on-demand by dbus, hard to check
proc_chk "gammastep"
proc_chk "kanshi"

printf "\n"

local_dns=$(cat "/etc/resolv.conf" | grep ^nameserver | cut -d' ' -f2 | xargs)
echo "dns: $local_dns"

if [ -f "/etc/dnscrypt-proxy/dnscrypt-proxy.toml" ]; then
    dnscrypt_servers=$(cat "/etc/dnscrypt-proxy/dnscrypt-proxy.toml" | rg '^server_names = \[(.*)\]' -or '$1')
    echo "dnscrypt servers: $dnscrypt_servers"
else
    bad "dnscrypt config not found"
fi

local_ip=$(ip a show wlan0 | grep inet | sed -n 1p | awk '{print $2}');
echo "local ip: $local_ip"

public_ip=$(dog +short myip.opendns.com @resolver1.opendns.com | tail -n 1 | cut -d' ' -f 14)
if [ -n "$public_ip" ]; then
    echo "public ip: $public_ip";
else
    echo "public ip not found"
fi

printf "\n"

mount_chk "$HOME/.private" "$HOME/private" "mounted ~/private"
mount_chk "$HOME/.vault"   "$HOME/vault"   "mounted ~/vault"
mount_chk "$HOME/.mail"    "$HOME/mail"    "mounted ~/mail"
mount_chk "$HOME/.repo"    "$HOME/repo"    "mounted ~/repo"

echo

day_in_secs=$(echo "60 * 60 * 24" | bc)
file_age_chk "/etc/hosts" $(echo "$day_in_secs * 30" | bc)
file_age_chk "$HOME/.snapshots/bulk" $(echo "$day_in_secs * 2" | bc)
