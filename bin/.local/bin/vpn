#!/bin/sh

export DISPLAY=:0
VPN_DIR="$HOME/.vpn"
ACTION=$1

case "$ACTION"
in
    down)
        DOWN=1
        shift
        ;;
    up)
        UP=1
        shift
        ;;
    random)
        RAND=1
        shift
        ;;
    *) ;;
esac

debug() { echo "$*"; }
info() { debug "$*"; notify-send "$*"; }
err() { echo -e "$*" >&2; }

get_vpns() {
    VPNS=$(find "$VPN_DIR" -type f -iname '*.conf' | xargs basename -s '.conf' | sort)
}

get_active_vpn() {
    ACTIVEVPN=$(ip a | \grep -E ' .*-wg-.*:' -o | sed 's/://g' | sed 's/ //g')
    if [ -z "$ACTIVEVPN" ]; then
        ACTIVEVPN=$(ip a | \grep -E 'mullvad-[a-z0-9]+' -o | head -n +1)
    fi
    if [ -z "$ACTIVEVPN" ]; then
        ACTIVEVPN=
    fi
}

down() {
    get_active_vpn

    if [ -z "$ACTIVEVPN" ]; then
        debug "not connected to vpn"
    elif wg-quick down "$VPN_DIR/$ACTIVEVPN.conf"; then
        info "disconnected from $ACTIVEVPN"
    else
        err "failed to disconnect from $ACTIVEVPN"
        exit 2
    fi
}

up() {
    PROFILE="$1"

    if [ -z "$PROFILE" ]; then
        get_vpns
        PROFILE=$(echo "$VPNS" | fzf) || exit 1
    fi

    # tear down active vpn before setting up new one
    down

    if wg-quick up "$VPN_DIR/$PROFILE.conf"; then
        info "connected to $PROFILE"
    else
        err "failed to connect to $PROFILE"
        exit 2
    fi
}

random() {
    get_vpns
    PICK=$(echo "$VPNS" | shuf -n 1)

    if [ $PICK ]; then
        up "$PICK"
    else
        err "failed to pick random vpn"
        exit 3
    fi
}

[ $DOWN ] && down
[ $UP ] && up "$@"
[ $RAND ] && random

exit 0
