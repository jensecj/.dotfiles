#!/bin/bash

set -e
set -o pipefail

DATE=$(date +%Y-%m-%d--%H:%M:%S)

err() { echo -e "$*" >&2; }
err_exit() { err "$@"; exit 1; }
info() { printf "\n%s %s\n\n" "$DATE" "$*" >&2; }

trap 'err_exit "[$DATE] Backup interrupted"' INT TERM

dirs=(
    "/boot/efi"
    "/boot/grub"
    "/etc"
    "/srv"
    "$HOME/.config"
)

for d in "${dirs[@]}"; do
    if [ ! -d "$d" ]; then
        err_exit "$d not found"
    fi
done

CRYPT_DIR="$HOME/.snapshots/boot"
if [ ! -d "$CRYPT_DIR" ]; then
    err_exit "crypt directory not found"
fi

borg create \
     --stats \
     --progress \
     --verbose \
     --compression zstd \
     --exclude-caches \
     --show-rc \
     --exclude '/home/*/.config/chromium/*' \
     --exclude '/home/*/.config/Electron/*' \
     --exclude '/home/*/.config/mpv/watch_later/*' \
     "$CRYPT_DIR::{hostname}--{user}--{now}" \
     "${dirs[@]}"

backup_exit=$?

borg prune \
     --list \
     --show-rc \
     --keep-within 1m \
     --keep-daily   7 \
     --keep-weekly  4 \
     --keep-monthly 12 \
     "$CRYPT_DIR"

prune_exit=$?

# use highest exit code as global exit code
global_exit=$(( backup_exit > prune_exit ? backup_exit : prune_exit ))

if [ ${global_exit} -eq 0 ]; then
    info "Backup and Prune finished successfully"
elif [ ${global_exit} -eq 1 ]; then
    info "Backup and/or Prune finished with warnings"
else
    info "Backup and/or Prune finished with errors"
fi

exit ${global_exit}
